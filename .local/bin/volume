#!/bin/sh

# Função para atualizar a barra (sinal 10 no dwmblocks)
update_bar() {
    kill -10 $(pidof dwmblocks)
}

# Obtém o sink padrão e o status do volume
get_vol() {
    local sink=$(pactl info | awk -F': ' '/Default Sink/ {print $2}')
    local vol=$(pactl get-sink-volume "$sink" | grep -o '[0-9]\+%' | head -n1 | tr -d '%')
    local mute=$(pactl list sinks | grep -A 15 "Name: $sink" | grep "Mute:" | awk '{print $2}')
    echo "$vol $mute"
}
case "$BLOCK_BUTTON" in
    1)  # Esquerdo → Mute/unmute
       pactl set-sink-mute "$(pactl info | awk -F': ' '/Default Sink/ {print $2}')" toggle
       update_bar ;;
    3)  # Direito → Notifica volume
        notify-send "Volume" "$(get_vol)" ;;
    4)  # Scroll ↑ → +5%
        pactl set-sink-volume "$sink" +5% ;;
    5)  # Scroll ↓ → -5%
        pactl set-sink-volume "$sink" -5% ;;
esac

case "$1" in
    up)
        vol=$(get_vol | awk '{print $1}')
        new=$((vol + 10))
        [ $new -gt 100 ] && new=100
        pactl set-sink-volume "$(pactl info | awk -F': ' '/Default Sink/ {print $2}')" "${new}%"
        update_bar
        ;;
    down)
        vol=$(get_vol | awk '{print $1}')
        new=$((vol - 10))
        [ $new -lt 0 ] && new=0
        pactl set-sink-volume "$(pactl info | awk -F': ' '/Default Sink/ {print $2}')" "${new}%"
        update_bar
        ;;
    mute)
        pactl set-sink-mute "$(pactl info | awk -F': ' '/Default Sink/ {print $2}')" toggle
        update_bar
        ;;
esac

# Exibe o status do volume para dwmblocks
read vol mute < <(get_vol)

if [ "$mute" = "yes" ]; then
    printf "󰖁 Mute\n"
else
    printf "󰕾 %s%%\n" "$vol"
fi

