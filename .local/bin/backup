#!/usr/bin/env bash

DOTFILES="$HOME/.config/"
SCRIPTS="$HOME/.local/bin/"

STORAGE=""
MOUNT=""

FILES_PATH=""
DOTFILES_PATH=""
SCRIPTS_PATH=""

send_nvim(){
	cp -u -r -v "${DOTFILES}/nvim/" "${DOTFILES_PATH}/"
}
send_alacritty(){
	cp -u -r -v "${DOTFILES}/alacritty/" "${DOTFILES_PATH}/"
}
send_tmux(){
	cp -u -r -v "${DOTFILES}/tmux/" "${DOTFILES_PATH}/"

}
send_dmenu(){
	cp -u -r -v "${DOTFILES}/dmenu/" "${DOTFILES_PATH}/"
}
send_dwm(){
	cp -u -r -v "${DOTFILES}/dwm/" "${DOTFILES_PATH}/"

}
send_dwmblocks(){
	cp -u -r -v "${DOTFILES}/dwmblocks/" "${DOTFILES_PATH}/"

}
send_picom(){
	cp -u -r -v "${DOTFILES}/picom/" "${DOTFILES_PATH}/"

}

send_all_dotfiles(){
	send_alacritty
	send_dmenu
	send_nvim
	send_tmux
	send_dwm
	send_dwmblocks
	send_picom
}
send_scripts(){
	mkdir -p "${STORAGE}/Backup/.local"

	SCRIPTS_PATH="${STORAGE}/Backup/.local/bin"
	cp -u -r -v "${SCRIPTS}" "${SCRIPTS_PATH}"

}
dotfiles(){
	mkdir -p "${STORAGE}/Backup/.config"

	DOTFILES_PATH="${STORAGE}/Backup/.config/"

	case "$(printf "  nvim\n  scripts\n tmux\n dmenu\n dwm\n dwmblocks\n picom\nall" | dmenu -i -c )" in
		** ) send_nvim ;;
		** ) send_scripts ;;
		alacritty) send_alacritty ;;
		tmux) send_tmux ;;
		dmenu) send_dmenu ;;
		dwm) send_dwm ;;
		dwmblocks) send_dwmblocks ;;
		picom) send_picom ;;
		all) send_all_dotfiles ;;
		*) exit 1 ;;
	esac
}

send_files(){
	mkdir -p "${STORAGE}/Backup/files"

	FILES_PATH="${STORAGE}/Backup/files"

	cp -u -r -v "${HOME}/Documents/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/Downloads/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/Music/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/notes/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/Pictures/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/Projects/" "${FILES_PATH}"
	cp -u -r -v "${HOME}/Videos/" "${FILES_PATH}"
}

send_all(){
	DOTFILES_PATH="${STORAGE}/Backup/.config/"
	FILES_PATH="${STORAGE}/Backup/files"
	send_files
	send_all_dotfiles
}

chose_files(){
	case "$(printf "  dotfiles\n  files\n 󱢎 send_all" | dmenu -i -c -l 4)" in 
		** ) dotfiles ;;
		** ) send_files ;;
		*󱢎* ) send_all ;;
		*) exit 1 ;;
	esac
}

selected_storage(){
	storage=""

	choice=$( lsblk -l | grep -E "sdb|sdc" | dmenu -i -c )

	MOUNT=$(echo "$choice"  | sed 's/.*\(sdb[0-9]\+\|sdc[0-9]\+\).*/\1/' | xargs -I {} udisksctl mount -b /dev/{}) 1>& /dev/null

	if [[ -n "${MOUNT+x}" ]]; then
		get_disk="$(echo $choice | awk '{print$1}' )"
		storage=$(udisksctl info -b  /dev/$get_disk | grep "MountPoints:" | awk -F'/' '{print $NF}' )
	else
		storage=$(echo "$MOUNT" | awk -F'/' '{print $NF}')
	fi

	STORAGE="$(echo /run/media/${USER}/$storage)"

	chose_files
}

selected_storage
